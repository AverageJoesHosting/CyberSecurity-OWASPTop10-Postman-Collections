{
    "info": {
      "name": "Cloud Security - Secure Configurations",
      "description": "Tests for secure configurations of resources, including public exposure and firewall rules.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "name": "Check Publicly Exposed Resources",
        "request": {
          "method": "GET",
          "header": [
            { "key": "Authorization", "value": "Bearer {{adminToken}}", "type": "text" }
          ],
          "url": {
            "raw": "{{baseUrl}}/config/resources/exposed",
            "host": ["{{baseUrl}}"],
            "path": ["config", "resources", "exposed"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "// Validate that no public resources are exposed",
                "pm.test('No publicly exposed resources', function () {",
                "    pm.response.to.have.status(200);",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.be.an('array').that.is.empty;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      },
      {
        "name": "Validate Security Group Rules",
        "request": {
          "method": "GET",
          "header": [
            { "key": "Authorization", "value": "Bearer {{adminToken}}", "type": "text" }
          ],
          "url": {
            "raw": "{{baseUrl}}/config/security-groups/{{securityGroupId}}",
            "host": ["{{baseUrl}}"],
            "path": ["config", "security-groups", "{{securityGroupId}}"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "// Validate firewall rules are configured securely",
                "pm.test('Security group rules are secure', function () {",
                "    pm.response.to.have.status(200);",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.have.property('rules');",
                "    pm.expect(jsonData.rules).to.be.an('array');",
                "    jsonData.rules.forEach(rule => {",
                "        pm.expect(rule).to.not.have.property('allow', '0.0.0.0/0');",
                "    });",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      }
    ],
    "variable": [
      { "key": "baseUrl", "value": "https://example.com" },
      { "key": "adminToken", "value": "admin-access-token" },
      { "key": "securityGroupId", "value": "sg-12345" }
    ]
  }
  