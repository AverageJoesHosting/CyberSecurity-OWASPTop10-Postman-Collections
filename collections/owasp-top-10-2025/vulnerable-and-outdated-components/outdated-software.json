{
    "info": {
      "name": "Outdated Software Detection",
      "description": "Tests to identify endpoints that disclose outdated or vulnerable software versions.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "name": "Check for Software Version Disclosure",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "{{baseUrl}}",
            "host": ["{{baseUrl}}"],
            "path": []
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "// Ensure software versions are not disclosed in response headers",
                "pm.test('No software version disclosure', function () {",
                "    const headers = pm.response.headers;",
                "    pm.expect(headers.has('X-Powered-By')).to.be.false;",
                "    pm.expect(headers.has('Server')).to.be.false;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      },
      {
        "name": "Verify Known Vulnerabilities in Software Version",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "{{baseUrl}}/version",
            "host": ["{{baseUrl}}"],
            "path": ["version"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "// Validate that the reported version does not have known vulnerabilities",
                "pm.test('Software version is secure', function () {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.have.property('version');",
                "    // Replace with a list of known vulnerable versions",
                "    const vulnerableVersions = ['1.0.0', '2.3.4'];",
                "    pm.expect(vulnerableVersions).to.not.include(jsonData.version);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      }
    ],
    "variable": [
      { "key": "baseUrl", "value": "https://example.com" }
    ]
  }
  