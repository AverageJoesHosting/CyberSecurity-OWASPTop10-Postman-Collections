{
    "info": {
      "name": "Broken Access Control - Delete Resource",
      "description": "Test for unauthorized deletion of resources to identify broken access control vulnerabilities in APIs.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "name": "Delete Resource (Unauthorized Access)",
        "request": {
          "method": "DELETE",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/{{apiVersion}}/resource/{{resourceId}}",
            "host": ["{{baseUrl}}"],
            "path": ["{{apiVersion}}", "resource", "{{resourceId}}"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "// Validate status code is either 401 (Unauthorized) or 403 (Forbidden)",
                "pm.test('Status code is 403 or 401', function () {",
                "    pm.expect([403, 401]).to.include(pm.response.code);",
                "});",
                "",
                "// Validate the response message contains an access denial indicator",
                "pm.test('Response includes access denial message', function () {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.message).to.match(/(Unauthorized|Forbidden|Access Denied)/i);",
                "});",
                "",
                "// Log the response for further analysis",
                "console.log('Response:', pm.response.text());"
              ],
              "type": "text/javascript"
            }
          }
        ]
      },
      {
        "name": "Delete Resource (Missing Token)",
        "request": {
          "method": "DELETE",
          "header": [],
          "url": {
            "raw": "{{baseUrl}}/{{apiVersion}}/resource/{{resourceId}}",
            "host": ["{{baseUrl}}"],
            "path": ["{{apiVersion}}", "resource", "{{resourceId}}"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "// Validate status code is 401 (Unauthorized) due to missing token",
                "pm.test('Status code is 401', function () {",
                "    pm.response.to.have.status(401);",
                "});",
                "",
                "// Validate the error message indicates a missing token",
                "pm.test('Response indicates missing token', function () {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.message).to.match(/(token missing|authentication required)/i);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ]
      },
      {
        "name": "Delete Resource (Admin Token)",
        "request": {
          "method": "DELETE",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{adminToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/{{apiVersion}}/resource/{{resourceId}}",
            "host": ["{{baseUrl}}"],
            "path": ["{{apiVersion}}", "resource", "{{resourceId}}"]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "// Validate status code is 200 or expected success code",
                "pm.test('Status code is 200 or expected success', function () {",
                "    pm.expect([200, 204]).to.include(pm.response.code);",
                "});",
                "",
                "// Log the success response for audit",
                "console.log('Successful deletion:', pm.response.text());"
              ],
              "type": "text/javascript"
            }
          }
        ]
      }
    ],
    "variable": [
      {
        "key": "baseUrl",
        "value": "https://example.com"
      },
      {
        "key": "apiVersion",
        "value": "v1"
      },
      {
        "key": "resourceId",
        "value": "123"
      },
      {
        "key": "userToken",
        "value": "your-user-token-here"
      },
      {
        "key": "adminToken",
        "value": "your-admin-token-here"
      }
    ]
  }
  